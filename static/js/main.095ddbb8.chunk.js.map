{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","cn","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","userID","setUserID","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","push","Math","max","trimEnd","value","placeholder","type","onChange","target","trimStart","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.095ddbb8.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user ? <UserInfo user={user} /> : null}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Todos = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Todos> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (<TodoInfo key={todo.id} todo={todo} />))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst getUniqueTodoID = () => Math.max(...todos.map(todo => todo.id)) + 1;\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userID, setUserID] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.trimStart().replace(/[^\\s\\da-zа-яёії]/gi, ''));\n    if (event.target.value !== '') {\n      setErrorTitle(false);\n    }\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserID(+event.target.value);\n    if (event.target.value !== '') {\n      setErrorUser(false);\n    }\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (userID === 0 || title === '') {\n      setErrorTitle(title === '');\n      setErrorUser(userID === 0);\n\n      return;\n    }\n\n    todos.push({\n      id: getUniqueTodoID(),\n      userId: userID,\n      title: title.trimEnd(),\n      completed: false,\n      user: getUser(userID),\n    });\n    setTitle('');\n    setUserID(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-2\">Add todo form</h1>\n\n      <form\n        className=\"App__form box\"\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label className=\"title is-6\">\n            Title\n            <input\n              value={title}\n              className=\"input\"\n              placeholder=\"Title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              onChange={handleChangeTitle}\n            />\n          </label>\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"title is-6\">\n            User\n            <select\n              className=\"App__select select\"\n              data-cy=\"userSelect\"\n              value={userID}\n              onChange={handleChangeUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>))}\n            </select>\n          </label>\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          className=\"App__button button is-success\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}